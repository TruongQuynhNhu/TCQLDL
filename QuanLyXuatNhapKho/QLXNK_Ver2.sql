/* Tao bang */
CREATE DATABASE QLXNK_V2;
GO
USE QLXNK_V2;

CREATE TABLE KHACHHANG_CDT(
ID_KH_CDT int unique not null,
Ten varchar(30),
DiaChi VARCHAR(30),
SDT INT,
Email VARCHAR(20)
);
CREATE TABLE CONGTRINH(
ID_CT INT UNIQUE NOT NULL,
Ten_CTrinh varchar(30),
ID_KH_CDT int,
DiaDiemThiCong varchar(30), /* trong thực tế, nếu cần lưu 2 cấp (tỉnh, huyện) thì nên làm như nào */
NgayKhoiCong DATE,
NgayDuKienHoanThanh DATE
);
CREATE TABLE NHACUNGCAP(
ID_NCC INT UNIQUE NOT NULL,
TenNCC VARCHAR(30)
);
CREATE TABLE KHO(
ID_Kho INT UNIQUE NOT NULL,
TenKho VARCHAR(30),
DiaChi VARCHAR(30)
);
CREATE TABLE VATTU(
ID_VatTu INT UNIQUE NOT NULL,
TenVatTu VARCHAR(30),
DonViTinh VARCHAR(10)
);
CREATE TABLE HOPDONG(
IDHopDong INT UNIQUE NOT NULL,
NgayHD DATE,
ID_Ctrinh INT,
TongGiaTri INT
);
CREATE TABLE NHAPXUAT(
IDNhapXuat INT NOT NULL,
IDPhieuXuat INT NULL,
IDPhieuNhap INT NULL
);
CREATE TABLE PHIEUXUAT(
IDNhapXuat INT UNIQUE NOT NULL,
NgayXuat DATE,
IDKhoXuat INT NOT NULL,
IDNCCNhap INT,
IDCTNhap INT
);
CREATE TABLE PHIEUNHAP(
IDNhapXuat INT UNIQUE NOT NULL,
NgayNhap DATE,
IDKhoNhap INT NOT NULL,
IDNCCXuat INT,
IDCTXuat INT
);
CREATE TABLE PHIEUCHUYEN(
IDNhapXuat INT UNIQUE NOT NULL,
NgayXuat DATE,
IDKhoXuat INT,
NgayNhap DATE,
IDKhoNhap INT NOT NULL
);
CREATE TABLE CHITIETPX(
IDNhapXuat INT NOT NULL,
ID_VatTu INT NOT NULL,
SlgKeHoach INT,
SlgThucTe INT
);
CREATE TABLE CHITIETPN(
IDNhapXuat INT NOT NULL,
ID_VatTu INT NOT NULL,
SlgKeHoach INT,
SlgThucTe INT
);
CREATE TABLE CHITIETPC(
IDNhapXuat INT NOT NULL,
ID_VatTu INT NOT NULL,
SlgKeHoach INT,
SlgXuatThucTe INT,
SlgNhapThucTe INT
);
/*Thiet lap PK,FK */

ALTER TABLE KHACHHANG_CDT
ADD CONSTRAINT PK_KHCDT PRIMARY KEY (ID_KH_CDT)
;
ALTER TABLE CONGTRINH
ADD CONSTRAINT PK_CT PRIMARY KEY (ID_CT),
	CONSTRAINT FK_KHCDT1 FOREIGN KEY (ID_KH_CDT) REFERENCES KHACHHANG_CDT(ID_KH_CDT)
;
ALTER TABLE NHACUNGCAP
ADD CONSTRAINT PK_NCC PRIMARY KEY (ID_NCC)
;
ALTER TABLE KHO
ADD CONSTRAINT PK_Kho PRIMARY KEY (ID_Kho)
;
ALTER TABLE VATTU
ADD CONSTRAINT PK_VT PRIMARY KEY (ID_VatTu)
;
ALTER TABLE HOPDONG
ADD CONSTRAINT PK_HD PRIMARY KEY (IDHopDong),
	CONSTRAINT FK_CT FOREIGN KEY (ID_Ctrinh) REFERENCES CONGTRINH(ID_CT)
;
ALTER TABLE NHAPXUAT
ADD CONSTRAINT PK_NX PRIMARY KEY (IDNhapXuat)
;
CREATE UNIQUE INDEX IX_NX1 ON NHAPXUAT (IDPhieuXuat) WHERE IDPhieuXuat IS NOT NULL
;
CREATE UNIQUE INDEX IX_NX2 ON NHAPXUAT (IDPhieuNhap) WHERE IDPhieuNhap IS NOT NULL
;

ALTER TABLE PHIEUXUAT
ADD CONSTRAINT PK_NX1 PRIMARY KEY (IDNhapXuat),
	CONSTRAINT FK_NX1 FOREIGN KEY (IDNhapXuat) REFERENCES NHAPXUAT(IDNhapXuat),
	CONSTRAINT FK_Kho1 FOREIGN KEY (IDKhoXuat) REFERENCES KHO(ID_Kho),
	CONSTRAINT FK_NCC1 FOREIGN KEY (IDNCCNhap) REFERENCES NHACUNGCAP(ID_NCC),
	CONSTRAINT FK_CT3 FOREIGN KEY (IDCTNhap) REFERENCES CONGTRINH(ID_CT)
;
ALTER TABLE PHIEUNHAP
ADD CONSTRAINT PK_NX2 PRIMARY KEY (IDNhapXuat),
	CONSTRAINT FK_NX2 FOREIGN KEY (IDNhapXuat) REFERENCES NHAPXUAT(IDNhapXuat),
	CONSTRAINT FK_Kho2 FOREIGN KEY (IDKhoNhap) REFERENCES KHO(ID_Kho),
	CONSTRAINT FK_NCC2 FOREIGN KEY (IDNCCXuat) REFERENCES NHACUNGCAP(ID_NCC),
	CONSTRAINT FK_CT2 FOREIGN KEY (IDCTXuat) REFERENCES CONGTRINH(ID_CT)
;
ALTER TABLE PHIEUCHUYEN
ADD CONSTRAINT PK_NX3 PRIMARY KEY (IDNhapXuat),
	CONSTRAINT FK_NX3 FOREIGN KEY (IDNhapXuat) REFERENCES NHAPXUAT(IDNhapXuat),
	CONSTRAINT FK_Kho3 FOREIGN KEY (IDKhoXuat) REFERENCES KHO(ID_Kho),
	CONSTRAINT FK_Kho4 FOREIGN KEY (IDKhoXuat) REFERENCES KHO(ID_Kho)
;
ALTER TABLE CHITIETPX
ADD CONSTRAINT PK_NX_VT1 PRIMARY KEY (IDNhapXuat, ID_VatTu),
	CONSTRAINT FK_NX4 FOREIGN KEY (IDNhapXuat) REFERENCES PHIEUXUAT(IDNhapXuat),
	CONSTRAINT FK_VT1 FOREIGN KEY (ID_VatTu) REFERENCES VATTU(ID_VatTu)
;
ALTER TABLE CHITIETPN
ADD CONSTRAINT PK_NX_VT2 PRIMARY KEY (IDNhapXuat, ID_VatTu),
	CONSTRAINT FK_NX5 FOREIGN KEY (IDNhapXuat) REFERENCES PHIEUNHAP(IDNhapXuat),
	CONSTRAINT FK_VT2 FOREIGN KEY (ID_VatTu) REFERENCES VATTU(ID_VatTu)
;
ALTER TABLE CHITIETPC
ADD CONSTRAINT PK_NX_VT3 PRIMARY KEY (IDNhapXuat, ID_VatTu),
	CONSTRAINT FK_NX6 FOREIGN KEY (IDNhapXuat) REFERENCES PHIEUCHUYEN(IDNhapXuat),
	CONSTRAINT FK_VT3 FOREIGN KEY (ID_VatTu) REFERENCES VATTU(ID_VatTu)
;
/*Ngày Hợp Đồng trước ngày Khởi công*/
--CONSTRAINT cho bảng HOPDONG
ALTER TABLE HOPDONG
DROP CONSTRAINT IF EXISTS [

Chk_NgHD:

NgayKhoiCong must be not before NgayHopDong

];
DROP FUNCTION IF EXISTS SsNgHD_KC;
GO
CREATE FUNCTION SsNgHD_KC (@IDCT INT, @NgayHD DATE)
RETURNS bit AS
BEGIN
	DECLARE @result bit
	IF (SELECT NgayKhoiCong FROM CONGTRINH WHERE ID_CT=@IDCT) >= @NgayHD
		SET @result = 1
	ELSE
		SET @result = 0
	RETURN @result
END
GO
ALTER TABLE HOPDONG
ADD CONSTRAINT [

Chk_NgHD:

NgayKhoiCong must be not before NgayHopDong

] CHECK (dbo.SsNgHD_KC(IDHopDong, NgayHD) = 1);
GO
--CONSTRAINT cho bảng CONGTRINH, trong truong hop trường dữ liệu đã nhập đúng nhưng sau đó bảng CONGTRINH bị sửa lại thì cần có CONSTRAINT
ALTER TABLE CONGTRINH
DROP CONSTRAINT IF EXISTS [

Chk_NgKC:

NgayKhoiCong must be not before NgayHopDong

];
DROP FUNCTION IF EXISTS SsNgHD_KC2;
GO
CREATE FUNCTION SsNgHD_KC2 (@IDCT INT, @NgayKC DATE)
RETURNS bit AS
BEGIN
	DECLARE @result bit
	IF (SELECT NgayHD FROM HOPDONG WHERE ID_Ctrinh=@IDCT) <= @NgayKC
		SET @result = 1
	ELSE
		SET @result = 0
	IF (SELECT NgayHD FROM HOPDONG WHERE ID_Ctrinh=@IDCT) IS NULL
		SET @result = 1
	RETURN @result
END
GO

ALTER TABLE CONGTRINH
ADD CONSTRAINT [

Chk_NgKC:

NgayKhoiCong must be not before NgayHopDong

] CHECK (dbo.SsNgHD_KC2(ID_CT, NgayKhoiCong) = 1);

/*Ngày khởi công phải trước hoặc trùng ngày dự kiến hoàn thành*/
ALTER TABLE CONGTRINH
ADD CONSTRAINT [

ChkNgayKCHT:
NgayKhoiCong must not be after NgayDuKienHoanThanh.

] CHECK (NgayKhoiCong <= NgayDuKienHoanThanh)
;

/*Bảng Nhập Xuất, ứng với một IDNhapXuat phải có 
1 trong 2 thông tin IDPhieuXuat (TH xuất kho đi CT hoặc trả NCC) hoặc
					IDPhieuNhap (TH nhập kho từ CT hoặc NCC) hoặc
có cả 2 thông tin IDPhieuXuat và IDPhieuNhap (TH chuyển từ kho tới kho)*/
ALTER TABLE NHAPXUAT
ADD CONSTRAINT [

ChkIDPNX:
Both attributes IDPhieuNhap and IDPhieuXuat must not be NULL in the same row.

] CHECK (NOT(IDPhieuNhap IS NULL AND IDPhieuXuat IS NULL))
;
/*CHITIETPN: Mỗi phiếu nhập chỉ liên quan đến một nguồn duy nhất*/
ALTER TABLE PHIEUNHAP
ADD CONSTRAINT [

ChkNguon:
Each PHIEUNHAP must be belong to only one supplier type (NCC or CT).

] CHECK ((IDNCCXuat IS NULL AND IDCTXuat IS NOT NULL) OR
		(IDNCCXuat IS NOT NULL AND IDCTXuat IS NULL))
;
/*CHITIETPN: Mỗi phiếu xuất chỉ liên quan đến một nơi nhận duy nhất*/
ALTER TABLE PHIEUXUAT
ADD CONSTRAINT [

ChkDich:
Each PHIEUXUAT must be belong to only one receiver type (NCC or CT).

] CHECK ((IDNCCNhap IS NULL AND IDCTNhap IS NOT NULL) OR
		(IDNCCNhap IS NOT NULL AND IDCTNhap IS NULL))
;
/*Trường hợp chuyển kho, Kho xuất và Kho Nhập phải khác nhau*/
ALTER TABLE PHIEUCHUYEN
ADD CONSTRAINT [

ChkKhoNhapXuat:
IDKhoNhap must not be the same to IDKhoXuat.

] CHECK (IDKhoNhap != IDKhoXuat)
;
/*Trường hợp chuyển kho, ngày xuất phải trước hoặc cùng ngày nhập*/
ALTER TABLE PHIEUCHUYEN
ADD CONSTRAINT [

ChkNgayNhapXuat:
NgayNhap must not be after NgayXuat.

] CHECK (NgayNhap >= NgayXuat)
;

/*Trường hợp chuyển kho, trong chi tiết phiếu chyển, số lượng nhập thực tế phải nhỏ hơn số lượng xuất thực tế*/
ALTER TABLE CHITIETPC
ADD CONSTRAINT [

ChkSLgNhapXuatTT:
SlgNhapThucTe must not be greater than SlgXuatThucTe.

] CHECK (SlgNhapThucTe <= SlgXuatThucTe)
;
